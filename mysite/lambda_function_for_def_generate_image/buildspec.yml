version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.10
    commands:
      - echo Installing source dependencies...
      - pip install -r requirements.txt -t /tmp/dependencies
  pre_build:
    commands:
      - echo Pre-build phase...
  build:
    commands:
      - echo Build started on `date`
      - echo Listing contents of the root directory...
      - ls -la
      - echo Listing contents of the cloned repository...
      - ls -la $CODEBUILD_SRC_DIR
      - cd lambda_function_for_def_generate_image
      - zip -r9 /tmp/function.zip lambda_function.py  # Only include the lambda_function.py in the zip.
      - cd /tmp/dependencies
      - zip -ur /tmp/function.zip .  # Add dependencies to the zip.
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Uploading build artifacts...
      - aws s3 cp /tmp/function.zip s3://draft-lambda-functions/generate_image/function.zip
      - version_id=$(aws s3api list-object-versions --bucket draft-lambda-functions --prefix generate_image/function.zip --query 'Versions[0].VersionId' --output text)
      - echo Latest version ID of the function.zip is $version_id
      - aws cloudformation update-stack --stack-name imagegenerate --template-body file://$CODEBUILD_SRC_DIR/lambda_function_for_def_generate_image/deploy.yaml --parameters ParameterKey=FunctionCodeS3Version,ParameterValue=$version_id --capabilities CAPABILITY_IAM

artifacts:
  files:
    - /tmp/function.zip

cache:
  paths:
    - '/root/.cache/pip/**/*'
